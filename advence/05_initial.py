class Puppy:  #강아지 객체가 어떤 정보를 가져야 하는지 적어 놓은것.

    name="" #멤버 변수(필드) : class 안에서 사용 가능한 변수
    goal=""

    def __init__(self,name, goal):  # init 은 초기값 설정하기위해 사용하는 생성자함수. # 생성자 : 객체화시 호출되는 함수
        # 받아온 name 과 goal 은 이 생성자를 벗어날수 없다.(생성자의 쓰임이 다하면 함께 없어진다.)
        # 그래서 클래스(객체) 멤버 에다가 넣어줘야, 객체가 살아있는 동안 사용이 가능 하다.
        # 그런데  name = name 형태로는 어떤것이 객체의 멤버인지 알 수 없다.
        # 그래서 멤버인 녀석은 self 를 이용하여 표시해 준다.
        self.name=name #강아지 이름은 이거야
        self.goal=goal #강아지의 목적은 이거야

puppy = Puppy("멍멍이","집지키기") #이 강아지의 이름은 멍멍이이고, 목적은 집지키기 입니다.
print(f'이름 :{puppy.name} / 목적 : {puppy.goal}')

#1. class puppy 는 강아지 객체가 어떤 정보를 가져야 하는지 적어 놓은것이며
#2. puppy = Puppy("멍멍이","집지키기") 강아지를 만들떄 이름과 목적을 셋팅하여
#3. Puppy("멍멍이","집지키기") 실행하면 __init__ 함수가 자동실행 되며 전달받은 멍멍이와 집지키기가 내부로 들어가며 사라집니다.
#4. self를 통해 객체안에 정보를 저장 하여
#5. 객체완성(정보 출력)
